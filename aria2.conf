# Continue downloading a partially downloaded file if a corresponding control file exists
continue=true
# foe ext4 filesystem with extents support as it allocates large files almost instantly. (Default: prealloc)
# calls posix_fallocate() to allocate disk space before download begins.
file-allocation=falloc
# Name of log file
log=/home/logic/.aria2/aria2.log
# Output warnings and error only.
log-level=debug
# Set a maximum number of connections to a server for each download. (Default: 1)
max-connection-per-server=8
# Only split the size if the size is larger than 2*5 = 10MB. (Default: 20MB)
min-split-size=5M
# Set the maximum number of parallel downloads for every queue item
max-concurrent-downloads=50
# Download a file using N connections.
split=24
# Run the exit command and exit the shell once the download session is complete.
on-download-complete=exit
# Restart download if a corresponding control file does not exist. (Default: false)
allow-overwrite=false
# Rename the file name if the same file already exists.
auto-file-renaming=false
# Retrieve timestamp of the remote file from the remote HTTP/FTP server if it is available.
remote-time=true
# Print size in human readable form
human-readable=true
# Enable HTTP/1.1 pipelining to overcome network latency and to reduce network load. (Default: false)
enable-http-pipelining=true
# Output download progress summary every 120 seconds. (Default: 60)
summary-interval=120
# Number of tries
max-tries=5
# Enable HTTP/1.1 persistent connection. (Default: true)
enable-http-keep-alive=true
# Alaways resume download. if not possible download it from scratch.
always-resume=true
# Download file only when the local file is older than remote file (https only).
conditional-get=true
# Configuration file.
conf-path=/home/logic/.aria2/aria2.conf
# Event hooks
on-download-complete=/home/logic/Scripts/aria2HookOnComplete.sh
on-download-error=/home/logic/Scripts/aria2HookOnError.sh
on-download-pause=/home/logic/Scripts/aria2HookOnPause.sh
on-download-start=/home/logic/Scripts/aria2HookOnStart.sh
on-download-stop=/home/logic/Scripts/aria2HookOnStop.sh
# Event multiplexing
event-poll=epoll
# Metalink: Set the country code to make sure mirrors closest to you are used
# first. Prefer more secure https mirrors over http and ftp servers.
metalink-language=en-IN
metalink-location=in
metalink-preferred-protocol=https
# Download a file using N connections.
split=10
# RPC Options
#enable-rpc=true
#rpc-listen-all=true
#rpc-listen-port=6800
# rpc-user=admin
# rpc-passwd=vdhqd
# pause=false

# Certificate check
check-certificate=false
